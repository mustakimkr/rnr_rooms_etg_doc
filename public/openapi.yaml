openapi: 3.0.0
info:
  title: Lodging API for ETG
  version: "1.0"
  description: |
    ## Overview
      The Lodging API is a universal protocol for ETG to establish real-time connections with the RNR ROOMS system.<br>

      This API enables to:
      <ul>
        <li>Obtain static information about hotels.</li>
        <li>Search available rates by a list of hotels.</li>
        <li>Book rates, check bookings' statuses and cancel bookings.</li>
      </ul>

    ## Restrictions

     To ensure system stability and prevent invalid requests that could lead to service disruptions, the provider enforces the following API restrictions:
      1. Maximum number of rooms per request: **9**
      2. Maximum number of adults per room: **6**
      3. Maximum number of children per room: **6**
      4. Maximum number of total amount of guests per room: **10**
      5. Maximum booking window: : **365 days**
      6. Maximum nights: **31**
      7. Maximum number of hotels per request: **100**

      The provider converts children to adults based on age restrictions and maximum child age rules before returning availability.

      Cancellation policy rules sent in UTC timezone. (in /search and /search/{hotel_id} methods).

      Maximum timeouts:
      1. 18 seconds on search
      2. 60 seconds on book

    ## Identifiers
      - Rate ID - 128 bytes
      - Other IDs - 64 bytes

    ## Errors
    The following table lists all possible error codes and their corresponding messages:

    | Code | Message |
    |------------|--------------------------------|
    | 1000        | The specified hotel does not exist in the system. |
    | 1001        | Check-out date cannot be before check-in date. |
    | 1002        | Check-in date cannot be in the past. |
    | 1003        | Maximum 10 guests are allowed per room. |
    | 1004        | Maximum 31 nights are allowed. |
    | 1005        | Maximum booking window is 365 days. |
    | 1006        | The specified rate does not exist in the system. |
    | 1007        | Unable to book room. |
    | 1008        | The specified reservation does not exist in the system. |
    | 1009        | The invoice is closed, reservation cannot be canceled. |
    | 1010        | The reservation has already been cancelled. |
    | 1011        | Unable to cancel room. |
    | 1012        | You cannot cancel the reservation after check-in. |
    | 1013        | The price of the rate has already been changed. |
    | 4000        | Various field validation error messages. |
    | 4001        | Authentication related errors. |
    | 5000        | An internal server error has occurred.  |

    ## Authentication
      HTTP Basic Authentication (Basic Auth) is required.<br>
      Username and password will be provided during onboarding.<br>

      Here is an example of the HTTP request header: <br>
      <b><i>Authorization: Basic bG9sOnNlY3VyZQ== <br></i></b>
      where bG9sOnNlY3VyZQ== is a base64 encoded string username:password.
paths:
  /hotels:
    get:
      tags:
        - static
      summary: Static information about all hotels.
      security:
        - BasicAuth: []
      responses:
        "200":
          description: >
            Hotels static data information in [Newline-delimited JSON
            (ndjson)](https://en.wikipedia.org/wiki/JSON_streaming) format
            compressed with gzip.<br><br> Data for each hotel will have a
            [HotelStatic]() schema and will be in English.<br><br>

            <b>Attention</b> The OpenAPI spec does not support the NDJSON
            format; that's why the example value and schema are shown as an
            array of objects. However, the actual response has the following
            format:<br><br> <code>{"id":"6A6BA119-915D-480A-99A1-6290780D0E44",
            "name":"Almond Holiday Village", ... \<other fields> }</code><br>
            <code>{"id":"7388a593-6fdc-4f75-9897-133128e73003", "name":"Avlida
            Hotel", ... \<other fields>}</code>
          content:
            application/x-ndjson:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HotelStatic"
          headers:
            Content-Encoding:
              schema:
                type: string
              description: gzip
              required: true
        "401":
          description: The request is unauthorized.
        "500":
          description: Internal server error.
  /meals:
    get:
      tags:
        - static
      summary: Static information about meals.
      security:
        - BasicAuth: []
      responses:
        "200":
          description: Meals static data information.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Meal"
              example:
                - id: super-all-inclusive
                  name: Super all-inclusive
                - id: american-breakfast
                  name: American Breakfast
                - id: full-board
                  name: Breakfast, lunch and dinner included
                - id: dinner
                  name: Dinner
        "401":
          description: The request is unauthorized.
        "500":
          description: Internal server error.
  /search:
    post:
      tags:
        - search
      summary: Search for available rates in hotels.
      security:
        - BasicAuth: []
      description: >
        In response there will be all available rates from the list of hotels
        specified in a request body.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/BaseSearchRequest"
                - type: object
                - required:
                    - hotel_ids
                  properties:
                    hotel_ids:
                      type: array
                      items:
                        $ref: "#/components/schemas/HotelID"
            examples:
              singleroom:
                $ref: "#/components/examples/SingleroomSearchRequest"
              multiroom:
                $ref: "#/components/examples/MultiroomSearchRequest"
      responses:
        "200":
          description: >
            A list of hotels along with available booking rates.<br> If there is
            no availability, the response should contain an empty array.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
              examples:
                SingleRoom:
                  $ref: "#/components/examples/SignleroomSearchResponse"
                Multiroom:
                  $ref: "#/components/examples/MultiroomSearchResponse"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InvalidDates:
                  $ref: "#/components/examples/InvalidDates"
                InvalidResidency:
                  $ref: "#/components/examples/InvalidResidency"
                InvalidGuests:
                  $ref: "#/components/examples/InvalidGuests"
                ExceededAdultsCount:
                  $ref: "#/components/examples/ExceededAdultsCount"
                ExceededChildrenCount:
                  $ref: "#/components/examples/ExceededChildrenCount"
                ExceededRooms:
                  $ref: "#/components/examples/ExceededRooms"
        "401":
          description: The request is unauthorized.
        "500":
          description: Internal server error.
  /search/{hotel_id}:
    post:
      parameters:
        - in: path
          name: hotel_id
          required: true
          schema:
            $ref: "#/components/schemas/HotelID"
      tags:
        - search
      summary: Search for available rates in one hotel.
      security:
        - BasicAuth: []
      description: >
        This API call returns all available rates in one particular hotel. It
        should provide live and up-to-date information about all the rates.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseSearchRequest"
      responses:
        "200":
          description: Available booking rates with its up-to-date information.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Rate"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InvalidDates:
                  $ref: "#/components/examples/InvalidDates"
                InvalidResidency:
                  $ref: "#/components/examples/InvalidResidency"
                InvalidGuests:
                  $ref: "#/components/examples/InvalidGuests"
                ExceededAdultsCount:
                  $ref: "#/components/examples/ExceededAdultsCount"
                ExceededChildrenCount:
                  $ref: "#/components/examples/ExceededChildrenCount"
                ExceededRooms:
                  $ref: "#/components/examples/ExceededRooms"
        "404":
          description: Not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                HotelNotFound:
                  $ref: "#/components/examples/HotelNotFound"
  /book:
    post:
      tags:
        - book
      summary: Book a new reservation.
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - hotel_id
                - rate_id
                - client_reference_id
                - reservation_holder
                - contact_info
                - price
                - rooms
              properties:
                hotel_id:
                  $ref: "#/components/schemas/HotelID"
                rate_id:
                  $ref: "#/components/schemas/RateID"
                client_reference_id:
                  $ref: "#/components/schemas/ClientReferenceID"
                reservation_holder:
                  $ref: "#/components/schemas/Guest"
                contact_info:
                  $ref: "#/components/schemas/ContactInfo"
                price:
                  description: Total price of the rate.
                  type: number
                  example: 234.76
                payment:
                  description: Card information the booking will be paid with.
                  type: object
                  properties:
                    card_brand:
                      type: string
                      enum:
                        - Visa
                        - American Express
                        - Mastercard
                        - Discover
                        - JCB
                        - Diners Club
                        - Maestro
                        - MIR
                        - Other
                    number:
                      type: string
                      example: "1234567890123457"
                    holder:
                      type: string
                      example: James Smith
                    expiration_date:
                      type: string
                      example: "0422"
                    security_code:
                      type: string
                      example: "123"
                rooms:
                  description: A list of rooms to book.
                  type: array
                  items:
                    $ref: "#/components/schemas/BookRoom"
                comments:
                  description: >
                    Additional comments for the reservation from the reservation
                    holder. This information needs to be passed directly to the
                    hotel.
                  type: string
                  example: Non-smoking room, first floor.
            examples:
              singleroom:
                $ref: "#/components/examples/SingleroomBookRequest"
              multiroom:
                $ref: "#/components/examples/MultiroomBookRequest"
      responses:
        "200":
          description: >-
            The reservation request has been successfully processed.  Please
            note that a successful request does not mean that the booking has
            been confirmed. See tag ‘status’  to check the status of the
            reservation.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ReservationCodesRS"
                  - $ref: "#/components/schemas/ReservationStatus"
              examples:
                SingleRoom:
                  $ref: "#/components/examples/SingleroomBookResponse"
                Multiroom:
                  $ref: "#/components/examples/MultiroomBookResponse"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                InvalidClientReferenceID:
                  summary: Invalid client_reference_id.
                  value:
                    code: 4000
                    message: The client reference contains more than 36 symbols.
                InvalidReservationHolderLastName:
                  summary: Empty reservation holder's last name.
                  value:
                    code: 4000
                    message: The last name of the reservation holder is missing.
                InvalidReservationHolderFirstName:
                  summary: Empty reservation holder's first name.
                  value:
                    code: 4000
                    message: The first name of the reservation holder is missing.
                InvalidEmail:
                  summary: Invalid email in contact info.
                  value:
                    code: 4000
                    message: The email of the reservation holder is invalid.
                PriceHasBeenChanged:
                  summary: Change of price.
                  value:
                    code: 1013
                    message: The price of the rate has already been changed.
        "401":
          description: The request is unauthorized.
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          description: Internal server error.
  /status:
    post:
      tags:
        - book
      summary: Get the reservation's detailed information.
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationCodesRQ"
      responses:
        "200":
          description: Detailed information about the reservation.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ReservationCodesRS"
                  - $ref: "#/components/schemas/ReservationStatus"
                  - $ref: "#/components/schemas/StayRange"
                  - type: object
                    properties:
                      reservation_holder:
                        $ref: "#/components/schemas/Guest"
                      contact_info:
                        $ref: "#/components/schemas/ContactInfo"
                      hotel_id:
                        $ref: "#/components/schemas/HotelID"
                      hotel_name:
                        type: string
                        example: Almond Holiday Village
                      rate:
                        $ref: "#/components/schemas/Rate"
        "401":
          description: The request is unauthorized.
        "404":
          $ref: "#/components/responses/NotFoundReservation"
        "500":
          description: Internal server error.
  /cancel:
    post:
      tags:
        - book
      summary: Cancel the reservation.
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationCodesRQ"
      responses:
        "200":
          description: >-
            Cancellation request has been successfully processed.  Please note
            that a successful request does not mean that the booking has been
            canceled. See tag ‘status’  to check the status of the reservation.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ReservationCodesRS"
                  - $ref: "#/components/schemas/ReservationStatus"
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                CancelAfterCheckin:
                  summary: Cancel after check-in.
                  value:
                    code: 1012
                    message: You cannot cancel the reservation after check-in.
        "401":
          description: The request is unauthorized.
        "404":
          $ref: "#/components/responses/NotFoundReservation"
        "409":
          description: Already cancelled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                AlreadyCancelled:
                  summary: Already been cancelled.
                  value:
                    code: 1010
                    message: The reservation has already been cancelled.
        "500":
          description: Internal server error.
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  responses:
    NotFound:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          examples:
            HotelNotFound:
              $ref: "#/components/examples/HotelNotFound"
            RateNotFound:
              summary: Rate doesn't exist.
              value:
                code: 1006
                message: The specified rate does not exist in the system.
    NotFoundReservation:
      description: Not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            code: 1008
            message: The specified reservation does not exist in the system.
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
          description: |
            Detailed error description.
    HotelStatic:
      type: object
      required:
        - id
        - name
        - geo_coordinates
        - address
      properties:
        id:
          $ref: "#/components/schemas/HotelID"
        name:
          type: string
          description: Hotel's name
          example: Almond Holiday Village
        description:
          nullable: true
          type: string
          description: Hotel's full description.
          example: >
            Consistently voted one of the top hotels on the island, the hotel
            offers a ‘home from home’ experience. The family-run hotel prides
            itself on its warm welcome and nothing is too much trouble for the
            courteous staff. Set in the foothills of the mountains, the hotel is
            within easy reach of Camelot Beach and Alsancak Village, 10 minutes’
            walk way around the gardens are old Cypriot antiques and artefacts
            each adding to the unique character of the hotel. There’s a shady
            children’s area so little ones can enjoy playing even during warmest
            times of the day.
        geo_coordinates:
          type: object
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: number
              example: 35.346193
              maximum: 90
              minimum: -90
            longitude:
              type: number
              example: 33.191205
              maximum: 180
              minimum: -180
        address:
          type: string
          description: Full hotel's address.
          example: "Bademli Sok. No: 1, Alsancak, Cyprus"
        postal_code:
          nullable: true
          type: string
          example: "99000"
        contacts:
          nullable: true
          type: object
          properties:
            phone:
              type: string
              example: "+1234567890"
            email:
              type: string
              example: hotel@gmail.com
            webpage:
              type: string
              example: hotel.com
        currency:
          nullable: true
          type: string
          description: Main currency the hotel accepts in format ISO 4217.
          example: USD
        stars:
          nullable: true
          type: integer
          description: Hotel's star rating from 1 to 7.
          maximum: 7
          minimum: 1
          example: 3
        rating_certificate_info:
          nullable: true
          type: object
          required:
            - expiration_date
          properties:
            id:
              nullable: true
              type: string
              description: ID of the certificate that confirms the star rating.
              example: "1234"
            expiration_date:
              type: string
              format: date
              description: >-
                Expiration date of the certificate that confirms the star
                rating.
              example: "2022-10-01"
        important_info:
          nullable: true
          type: string
          description: Important information about hotels the guest should know about.
          example: All guests should have their passports upon arrival.
        check_in_instructions:
          nullable: true
          type: string
          example: Don't be late.
        check_in_time:
          nullable: true
          type: string
          description: Check-in start time in format hh:mm, in the hotel timezone.
          example: "14:00"
        check_in_before_time:
          nullable: true
          type: string
          description: Check-in end time in format hh:mm, in the hotel timezone.
          example: "18:00"
        check_out_time:
          nullable: true
          type: string
          description: Check-out time in format hh:mm, in the hotel timezone.
          example: "12:00"
        images:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/Image"
          example:
            - category: Lobby
              url: >-
                https://www.test.com/almond/almond-holiday-village-mp/lobby-500x249.jpg
            - category: Garden
              url: >-
                https://www.test.com/almond/almond-holiday-village-mp/garden-500x249.jpg
        amenities:
          nullable: true
          type: array
          items:
            type: string
          example:
            - Beach/pool towels
            - Airport transportation
            - Area shuttle
            - Karaoke
            - Laundry
            - Mini golf
        rooms:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/RoomStatic"
        extras:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/Extra"
    RoomStatic:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: Deluxe Room
        id:
          nullable: true
          type: string
          maxLength: 64
          example: 1700208156854
        description:
          nullable: true
          type: string
          example: Very beautiful room
        occupancy:
          nullable: true
          description: Maximum number of people who can stay in the room.
          type: integer
          example: 4
        area:
          nullable: true
          description: Room's area in square meters.
          type: number
          example: 45
        bed_groups:
          nullable: true
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                example: "123"
                maxLength: 64
              name:
                type: string
                example: double + twin
              bed_types:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                    quantity:
                      type: integer
                      description: The amount of beds of this type in the room.
                example:
                  - name: double
                    quantity: 1
                  - name: twin
                    quantity: 2
        images:
          nullable: true
          type: array
          items:
            $ref: "#/components/schemas/Image"
          example:
            - category: Bathroom
              url: >-
                https://www.test.com/almond/almond-holiday-village-mp/bathroom-500x249.jpg
            - category: Balcon
              url: >-
                https://www.test.com/almond/almond-holiday-village-mp/balcon-500x249.jpg
        amenities:
          nullable: true
          type: array
          items:
            type: string
          example:
            - shower
            - tv
            - soundproofing
            - washing-machine
            - private-entrance
            - no-window
    Image:
      type: object
      required:
        - url
      properties:
        category:
          nullable: true
          type: string
          example: Room
        url:
          type: string
          example: https://www.test.com/almond/almond-holiday-village-mp-500x249.jpg
    Meal:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          example: super-all-inclusive
          maxLength: 128
        name:
          type: string
          example: Super all-inclusive
      example:
        id: super-all-inclusive
        name: Super all-inclusive
    BaseSearchRequest:
      allOf:
        - $ref: "#/components/schemas/StayRange"
        - required:
            - check_in
            - check_out
        - type: object
          required:
            - residency
            - guests_groups
          properties:
            residency:
              description: Booking's holder country of residence in format ISO 3166-2.
              type: string
              example: GB
            guests_groups:
              description: Each element represents guests of one room.
              type: array
              items:
                $ref: "#/components/schemas/GuestGroup"
    StayRange:
      type: object
      properties:
        check_in:
          description: Check-in date.
          type: string
          format: date
          example: "2022-09-21"
        check_out:
          description: Check-out date.
          type: string
          format: date
          example: "2022-09-29"
    GuestGroup:
      type: object
      required:
        - adults
      properties:
        adults:
          type: integer
          example: 2
        children_ages:
          description: Ages betwen 0 and 17 years old inclusive.
          type: array
          items:
            type: integer
          example:
            - 6
            - 8
    Hotel:
      type: object
      required:
        - hotel_id
      properties:
        hotel_id:
          $ref: "#/components/schemas/HotelID"
        rates:
          type: array
          items:
            $ref: "#/components/schemas/Rate"
    Rate:
      type: object
      required:
        - id
        - price
        - payment_type
        - currency
        - rooms
      properties:
        id:
          $ref: "#/components/schemas/RateID"
        price:
          description: >-
            Total price of the whole rate including everything as possible (all
            rooms, meals, taxes, etc.).
          type: number
          example: 234.76
        bar_price:
          nullable: true
          description: >-
            Best available price of the rate. This is the final price for the
            distributor and includes commission. The rate should be sold with
            amount no less than the bar_price.
          type: number
          example: 240.76
        commission:
          nullable: true
          description: Amount the distributor receives for selling the rate.
          type: number
          example: 45
        supplier_min_price:
          nullable: true
          description: Below this price the rate cannot be sold on b2c channels.
          type: number
          example: 245.89
        taxes:
          nullable: true
          description: A list of included and excluded in the rate taxes.
          type: array
          items:
            type: object
            required:
              - type
              - currency
              - is_included
              - amount
            properties:
              type:
                type: string
                enum:
                  - hotel_fee
                  - cleaning_fee
                  - transfer_fee
                  - environmental_fee
                  - vat
                  - service_fee
                  - luxury_tax
                  - occupancy_tax
                  - electricity_fee
                  - city_tax
                  - resort_fee
                example: city_tax
              currency:
                description: >
                  Currency of the tax amount in format ISO 4217. For included
                  taxes currency must be the same as rate currency. For excluded
                  taxes it must be a currency which the hotel can accept.
                type: string
                example: AED
              is_included:
                description: >-
                  Indicates if the tax is included in the total rate price or
                  not.
                type: boolean
                example: false
              amount:
                type: number
                example: 20
        payment_type:
          description: >-
            Indicates whether the payment should be done upon booking's creation
            (prepay) or upon arrival (postpay).
          type: string
          enum:
            - prepay
            - postpay
        currency:
          description: Currency of all the prices in the rate in format ISO 4217.
          type: string
          example: USD
        meals:
          nullable: true
          description: A list of meal types included in the rate.
          type: array
          items:
            $ref: "#/components/schemas/Meal"
          example:
            - id: full-board
              name: Breakfast, lunch and dinner included
        cancellation_policies:
          nullable: true
          description: >
            A list of cancellation policies applicable for the rate. If the list
            is empty, the rate is non-refundable.
          type: array
          items:
            type: object
            required:
              - from
              - amount
            properties:
              from:
                description: Timestamp in UTC timezone when this policy is applied.
                type: string
                format: date-time
                example: "2022-09-02T15:00:05Z"
              amount:
                description: Cancellation policy fee in the currency of the rate.
                type: number
                example: 56.7
          example:
            - from: "2022-09-02T15:00:05Z"
              amount: 56.7
            - from: "2022-09-21T15:00:05Z"
              amount: 234.76
        rooms:
          description: >-
            List of rooms included in the rate (number of rooms should be the
            same as the number of requested guest groups)
          type: array
          items:
            $ref: "#/components/schemas/Room"
    Room:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          example: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
          maxLength: 64
        name:
          type: string
          description: Room name, should be passed in English.
          example: Sea View Room
        bed_groups:
          nullable: true
          description: A list of bed groups in the room.
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
              name:
                type: string
          example:
            - id: "123"
              name: double + twin
        allotment:
          description: Number of available rooms in the hotel via this rate.
          type: integer
          example: 4
    BookRoom:
      type: object
      required:
        - id
        - guests
      properties:
        id:
          type: string
          example: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
          maxLength: 64
        guests:
          type: array
          description: >-
            Guests in a room. At least one guest per room should be present in
            the request. This guest will be a room holder for this booking.
          items:
            $ref: "#/components/schemas/Guest"
    Guest:
      type: object
      required:
        - first_name
        - last_name
        - is_child
      properties:
        first_name:
          type: string
          example: James
        last_name:
          type: string
          example: Smith
        is_child:
          type: boolean
          example: false
    ContactInfo:
      type: object
      required:
        - email
        - phone
      properties:
        email:
          type: string
          example: support@emergingtravel.com
        phone:
          type: string
          example: "+74992156525"
    HotelID:
      type: string
      maxLength: 64
      example: 6A6BA119-915D-480A-99A1-6290780D0E44
    RateID:
      description: >
        Rate ID is identifier that is used to reference search response item
        (accommodation variant).  It is used by clients to make booking
        requests.
      type: string
      maxLength: 128
      example: fb0ccf25-7a6c-44d8-9613-0090451817f2
    ClientReferenceID:
      description: >
        A randomly generated string by a distributor upon each booking request.
        This reference can also be used to identify the reservation in the
        provider's system.
      type: string
      maxLength: 64
      example: ca115bce-5746-4418-9bba-7715d3751dc9
    ReservationCodesRQ:
      type: object
      required:
        - client_reference_id
      properties:
        reservation_id:
          type: string
          description: >-
            Reservation id in provider's system returned in successful book
            response.
          example: CF343D9C-0466-4DE2-8D93-9BA7A3738527
        client_reference_id:
          $ref: "#/components/schemas/ClientReferenceID"
    ReservationCodesRS:
      type: object
      required:
        - reservation_id
        - client_reference_id
      properties:
        reservation_id:
          type: string
          description: Reservation id in provider's system.
          maxLength: 64
          example: CF343D9C-0466-4DE2-8D93-9BA7A3738527
        client_reference_id:
          $ref: "#/components/schemas/ClientReferenceID"
        hotel_confirmation_code:
          type: string
          description: Hotel confirmation code.
          maxLength: 64
          example: 8b7691a0-8f45-4d17-8090-67ff259102e1
    ReservationStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - cancelled
            - confirmed
            - pending
    Extra:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          maxLength: 128
          example: extra bed
        description:
          type: string
        price:
          type: object
          required:
            - currency
            - amount
          properties:
            currency:
              type: string
              maxLength: 3
              example: USD
            amount:
              type: number
            is_percentage:
              type: boolean
              default: false
              description: >
                Indicates if the price is a percentage of the total price or
                not.
        price_unit:
          type: string
          default: single_payment
          enum:
            - single_payment
            - per_room_per_stay
            - per_person_per_stay
            - per_hour
            - per_night
            - per_week
            - per_room_per_night
            - per_person_per_night
        payment_type:
          type: string
          default: any
          enum:
            - cash
            - card
            - any
        is_included:
          type: boolean
          default: false
          description: |
            Indicates if the extra price is included in the total price or not.
        applicable_ages:
          type: object
          description: |
            Applicable ages for this extra.
          properties:
            from:
              type: integer
              example: 0
            to:
              type: integer
              example: 14
  examples:
    SingleroomSearchRequest:
      summary: singleroom
      value:
        hotel_ids:
          - 6A6BA119-915D-480A-99A1-6290780D0E44
        residency: GB
        guests_groups:
          - adults: 1
            children_ages:
              - 6
              - 8
        check_in: "2022-09-21"
        check_out: "2022-09-29"
    MultiroomSearchRequest:
      summary: multiroom
      value:
        hotel_ids:
          - 6A6BA119-915D-480A-99A1-6290780D0E44
        residency: GB
        guests_groups:
          - adults: 2
            children_ages:
              - 6
              - 8
          - adults: 1
            children_ages:
              - 8
        check_in: "2022-09-21"
        check_out: "2022-09-29"
    SignleroomSearchResponse:
      summary: singleroom
      value:
        hotel_id: 6A6BA119-915D-480A-99A1-6290780D0E44
        rates:
          - id: fb0ccf25-7a6c-44d8-9613-0090451817f2
            price: 234.76
            payment_type: prepay
            currency: USD
            rooms:
              - id: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
                name: Sea View Room
                bed_groups:
                  - id: "123"
                    name: double + twin
                allotment: 4
    MultiroomSearchResponse:
      summary: multiroom
      value:
        hotel_id: 6A6BA119-915D-480A-99A1-6290780D0E44
        rates:
          - id: fb0ccf25-7a6c-44d8-9613-0090451817f2
            price: 234.76
            payment_type: prepay
            currency: USD
            rooms:
              - id: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
                name: Sea View Room
                bed_groups:
                  - id: "123"
                    name: double + twin
                allotment: 4
              - id: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
                name: DoubleRoom
                bed_groups:
                  - id: "345"
                    name: twin
                allotment: 2
    SingleroomBookRequest:
      summary: singleroom
      value:
        hotel_id: 6A6BA119-915D-480A-99A1-6290780D0E44
        rate_id: fb0ccf25-7a6c-44d8-9613-0090451817f2
        client_reference_id: ca115bce-5746-4418-9bba-7715d3751dc9
        reservation_holder:
          first_name: James
          last_name: Smith
          is_child: "false"
        contact_info:
          email: support@emergingtravel.com
          phone: "+74992156525"
        price: "234.76"
        payment:
          card_brand: Visa
          number: "1234567890123457"
          holder: James Smith
          expiration_date: "0422"
          security_code: "123"
        rooms:
          - id: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
            guests:
              - first_name: James
                last_name: Smith
                is_child: "false"
              - first_name: John
                last_name: Smith
                is_child: "true"
              - first_name: Jade
                last_name: Smith
                is_child: "true"
        comments: Non-smoking room, first floor.
    MultiroomBookRequest:
      summary: multiroom
      value:
        hotel_id: 6A6BA119-915D-480A-99A1-6290780D0E44
        rate_id: fb0ccf25-7a6c-44d8-9613-0090451817f2
        client_reference_id: ca115bce-5746-4418-9bba-7715d3751dc9
        reservation_holder:
          first_name: James
          last_name: Smith
          is_child: "false"
        contact_info:
          email: support@emergingtravel.com
          phone: "+74992156525"
        price: "234.76"
        payment:
          card_brand: Visa
          number: "1234567890123457"
          holder: James Smith
          expiration_date: "0422"
          security_code: "123"
        rooms:
          - id: "22237562"
            guests:
              - first_name: John
                last_name: Smith
                is_child: "false"
              - first_name: Jade
                last_name: Smith
                is_child: "false"
              - first_name: John
                last_name: Smith
                is_child: "true"
              - first_name: Jade
                last_name: Smith
                is_child: "true"
          - id: 0c9b1576-7db2-4546-bb76-4de0f9fb5ae2
            guests:
              - first_name: James
                last_name: Jones
                is_child: "false"
              - first_name: John
                last_name: Jones
                is_child: "true"
        comments: Non-smoking room, first floor.
    SingleroomBookResponse:
      summary: singleroom
      value:
        reservation_id: CF343D9C-0466-4DE2-8D93-9BA7A3738527
        client_reference_id: ca115bce-5746-4418-9bba-7715d3751dc9
        hotel_confirmation_code: 8b7691a0-8f45-4d17-8090-67ff259102e1
        status: confirmed
    MultiroomBookResponse:
      summary: multiroom
      value:
        reservation_id: CF343D9C-0466-4DE2-8D93-9BA7A3738527
        client_reference_id: ca115bce-5746-4418-9bba-7715d3751dc9
        hotel_confirmation_code: 8b7691a0-8f45-4d17-8090-67ff259102e1
        status: confirmed
    InvalidDates:
      summary: Invalid dates in the request.
      value:
        code: 1001
        message: Check-out is before check-in.
    InvalidResidency:
      summary: Invalid residency in the request.
      value:
        code: 4000
        message: Residency EN does not exists.
    InvalidGuests:
      summary: Invalid guest list in the request.
      value:
        code: 4000
        message: There should be at least one adult in the room.
    ExceededAdultsCount:
      summary: Too many adults.
      value:
        code: 4000
        message: The amount of adults exceeds the maximum acceptable value per room.
    ExceededChildrenCount:
      summary: Too many children.
      value:
        code: 4000
        message: The amount of children exceeds the maximum acceptable value per room.
    ExceededRooms:
      summary: Too many rooms.
      value:
        code: 4000
        message: The amount of rooms exceeds the maximum acceptable value.
    HotelNotFound:
      summary: Hotel doesn't exist.
      value:
        code: 1000
        message: The specified hotel does not exist in the system.
